import edu.wpi.first.gradlerio.GradleRIOPlugin
import edu.wpi.first.gradlerio.frc.FRCJavaArtifact
import edu.wpi.first.gradlerio.frc.RoboRIO

plugins {
    id "edu.wpi.first.GradleRIO" version "2019.0.0-alpha-3"
    id "org.jetbrains.kotlin.jvm" version "1.3.10"
}

def TEAM = 321
def ROBOT_CLASS = "frc.team321.robot.Robot"

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcJava', FRCJavaArtifact) {
            //noinspection GroovyAssignabilityCheck
            targets << "roborio"
        }
    }
}

repositories {
    mavenCentral()

    maven { url 'https://jitpack.io' }
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Phoenix (Talon SRX)
// and NavX.
dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
    compile openrio.powerup.matchData()

    compile pathfinder()

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile group: 'net.jafama', name: 'jafama', version: '2.3.1'

    compile 'com.github.5190GreenHopeRobotics:FalconLibrary:-SNAPSHOT'
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}